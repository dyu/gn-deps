# ==================================================
# vars

gtest_dir = "googletest"
gmock_dir = "googlemock"

config("gtest_config") {
  visibility = [
    ":*",
    #"//testing/gmock:*",  # gmock also shares this config.
  ]
  defines = [
    # In order to allow regex matches in gtest to be shared between Windows
    # and other systems, we tell gtest to always use it's internal engine.
    "GTEST_HAS_POSIX_RE=0",
    # Enables C++11 features.
    "GTEST_LANG_CXX11=1",
    # Prevents gtest from including both <tr1/tuple> and <tuple>.
    "GTEST_HAS_TR1_TUPLE=0",
  ]
  # Gtest headers need to be able to find themselves.
  include_dirs = [ "$gtest_dir/include" ]
  if (is_win) {
    cflags = [ "/wd4800" ]  # Unused variable warning.
  }
}
config("gtest_direct_config") {
  visibility = [ ":*" ]
  defines = [ "UNIT_TEST" ]
}
config("gtest_warnings") {
  if (is_win && is_clang) {
    # The Mutex constructor initializer list in gtest-port.cc is incorrectly
    # ordered. See
    # https://groups.google.com/d/msg/googletestframework/S5uSV8L2TX8/U1FaTDa6J6sJ.
    cflags = [ "-Wno-reorder" ]
  }
}
static_library("gtest") {
  testonly = true
  sources = [
    "$gtest_dir/include/gtest/gtest-death-test.h",
    "$gtest_dir/include/gtest/gtest-matchers.h",
    "$gtest_dir/include/gtest/gtest-message.h",
    "$gtest_dir/include/gtest/gtest-param-test.h",
    "$gtest_dir/include/gtest/gtest-printers.h",
    "$gtest_dir/include/gtest/gtest-spi.h",
    "$gtest_dir/include/gtest/gtest-test-part.h",
    "$gtest_dir/include/gtest/gtest-typed-test.h",
    "$gtest_dir/include/gtest/gtest.h",
    "$gtest_dir/include/gtest/gtest_pred_impl.h",
    "$gtest_dir/include/gtest/gtest_prod.h",
    "$gtest_dir/include/gtest/internal/gtest-death-test-internal.h",
    "$gtest_dir/include/gtest/internal/gtest-filepath.h",
    "$gtest_dir/include/gtest/internal/gtest-internal.h",
    "$gtest_dir/include/gtest/internal/gtest-param-util.h",
    "$gtest_dir/include/gtest/internal/gtest-port-arch.h",
    "$gtest_dir/include/gtest/internal/gtest-port.h",
    "$gtest_dir/include/gtest/internal/gtest-string.h",
    "$gtest_dir/include/gtest/internal/gtest-type-util.h",
    #"$gtest_dir/src/gtest-all.cc",  # Not needed by our build.
    "$gtest_dir/src/gtest-death-test.cc",
    "$gtest_dir/src/gtest-filepath.cc",
    "$gtest_dir/src/gtest-internal-inl.h",
    "$gtest_dir/src/gtest-port.cc",
    "$gtest_dir/src/gtest-printers.cc",
    "$gtest_dir/src/gtest-test-part.cc",
    "$gtest_dir/src/gtest-typed-test.cc",
    "$gtest_dir/src/gtest.cc",
  ]
  include_dirs = [ "$gtest_dir" ]
  all_dependent_configs = [ ":gtest_config" ]
  public_configs = [ ":gtest_direct_config" ]
}
source_set("gtest_main") {
  testonly = true
  sources = [
    "$gtest_dir/src/gtest_main.cc",
  ]
  deps = [
    ":gtest",
  ]
}

# ==================================================
# gmock

config("gmock_config") {
  # Gmock headers need to be able to find themselves.
  include_dirs = [ "$gmock_dir/include" ]
}
static_library("gmock") {
  testonly = true
  sources = [
    # Sources based on files in r173 of gmock.
    "$gmock_dir/include/gmock/gmock-actions.h",
    "$gmock_dir/include/gmock/gmock-cardinalities.h",
    "$gmock_dir/include/gmock/gmock-function-mocker.h",
    "$gmock_dir/include/gmock/gmock-matchers.h",
    "$gmock_dir/include/gmock/gmock-more-actions.h",
    "$gmock_dir/include/gmock/gmock-more-matchers.h",
    "$gmock_dir/include/gmock/gmock-nice-strict.h",
    "$gmock_dir/include/gmock/gmock-spec-builders.h",
    "$gmock_dir/include/gmock/gmock.h",
    "$gmock_dir/include/gmock/internal/gmock-internal-utils.h",
    "$gmock_dir/include/gmock/internal/gmock-port.h",
    "$gmock_dir/include/gmock/internal/gmock-pp.h",
    #"src/gmock-all.cc",  # Not needed by our build.
    "$gmock_dir/src/gmock-cardinalities.cc",
    "$gmock_dir/src/gmock-internal-utils.cc",
    "$gmock_dir/src/gmock-matchers.cc",
    "$gmock_dir/src/gmock-spec-builders.cc",
    "$gmock_dir/src/gmock.cc",
  ]
  # This project includes some stuff form gtest's guts.
  #include_dirs = [ "$gtest_dir/include" ]
  public_configs = [
    ":gmock_config",
    ":gtest_config",
  ]
}

static_library("gmock_main") {
  testonly = true
  sources = [
    "$gmock_dir/src/gmock_main.cc",
  ]
  deps = [
    ":gmock",
  ]
}

