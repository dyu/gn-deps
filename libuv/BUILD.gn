# ==================================================
# vars

config("libuv_config") {
  include_dirs = [
    "include",
  ]
  if (is_win) {
    libs = [
      "advapi32.lib",
      "iphlpapi.lib",
      "psapi.lib",
      "shell32.lib",
      "user32.lib",
      "userenv.lib",
      "ws2_32.lib",
    ]
  } else {
    libs = [
      "m",
      "dl",
      "rt",
    ]
  }
}

static_library("libuv") {
  sources = [
    "include/uv.h",
    "include/tree.h",
    "include/uv-errno.h",
    "include/uv-threadpool.h",
    "include/uv-version.h",
    "src/fs-poll.c",
    "src/heap-inl.h",
    "src/inet.c",
    "src/queue.h",
    "src/threadpool.c",
    "src/uv-common.c",
    "src/uv-common.h",
    "src/version.c",
  ]
  include_dirs = [
    "src",
  ]
  if (is_win) {
    defines = [
      "_WIN32_WINNT=0x0600",
      "_GNU_SOURCE",
    ]
    sources += [
      "include/uv-win.h",
      "src/win/async.c",
      "src/win/atomicops-inl.h",
      "src/win/core.c",
      "src/win/detect-wakeup.c",
      "src/win/dl.c",
      "src/win/error.c",
      "src/win/fs.c",
      "src/win/fs-event.c",
      "src/win/getaddrinfo.c",
      "src/win/getnameinfo.c",
      "src/win/handle.c",
      "src/win/handle-inl.h",
      "src/win/internal.h",
      "src/win/loop-watcher.c",
      "src/win/pipe.c",
      "src/win/thread.c",
      "src/win/poll.c",
      "src/win/process.c",
      "src/win/process-stdio.c",
      "src/win/req.c",
      "src/win/req-inl.h",
      "src/win/signal.c",
      "src/win/snprintf.c",
      "src/win/stream.c",
      "src/win/stream-inl.h",
      "src/win/tcp.c",
      "src/win/tty.c",
      "src/win/timer.c",
      "src/win/udp.c",
      "src/win/util.c",
      "src/win/winapi.c",
      "src/win/winapi.h",
      "src/win/winsock.c",
      "src/win/winsock.h",
    ]
  } else {
    defines = [
      "_LARGEFILE_SOURCE",
      "_FILE_OFFSET_BITS=64",
      #"_POSIX_C_SOURCE=200112L",
    ]
    sources += [
      "include/uv-unix.h",
      "include/uv-linux.h",
      "include/uv-sunos.h",
      "include/uv-darwin.h",
      "include/uv-bsd.h",
      "include/uv-aix.h",
      "src/unix/async.c",
      "src/unix/atomic-ops.h",
      "src/unix/core.c",
      "src/unix/dl.c",
      "src/unix/fs.c",
      "src/unix/getaddrinfo.c",
      "src/unix/getnameinfo.c",
      "src/unix/internal.h",
      "src/unix/loop.c",
      "src/unix/loop-watcher.c",
      "src/unix/pipe.c",
      "src/unix/poll.c",
      "src/unix/process.c",
      "src/unix/signal.c",
      "src/unix/spinlock.h",
      "src/unix/stream.c",
      "src/unix/tcp.c",
      "src/unix/thread.c",
      "src/unix/timer.c",
      "src/unix/tty.c",
      "src/unix/udp.c",
      # extra
      "src/unix/proctitle.c",
      # linux
      "src/unix/linux-core.c",
      "src/unix/linux-inotify.c",
      "src/unix/linux-syscalls.c",
      "src/unix/linux-syscalls.h",
    ]
    cflags = [
      "--std=gnu89",
      "-pedantic",
      "-fvisibility=hidden",
      "-Wstrict-aliasing",
      #"-fPIC",
    ]
  }
  if (is_win) {
    all_dependent_configs = [ ":libuv_config" ]
  } else {
    public_configs = [ ":libuv_config" ]
  }
}

#executable("sample_uv") {
#  sources = [ "sample_uv.c" ]
#  deps = [ ":libuv" ]
#}

